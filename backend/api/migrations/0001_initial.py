# Generated by Django 4.2.7 on 2023-11-23 04:50

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=255)),
                ('create_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'departments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality_name', models.CharField(max_length=255)),
                ('create_on', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.department')),
            ],
            options={
                'db_table': 'municipalities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('product_description', models.CharField(max_length=255, null=True)),
                ('product_price', models.FloatField(default=0.0)),
                ('product_in_promotion', models.BooleanField(default=False)),
                ('product_promotion_price', models.FloatField(default=0.0)),
                ('product_image', models.FileField(null=True, upload_to='products')),
            ],
            options={
                'db_table': 'products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province_name', models.CharField(max_length=255)),
                ('code_province', models.CharField(max_length=20, null=True)),
                ('create_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'provinces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shelve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelve_name', models.CharField(max_length=255)),
                ('shelve_description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'shelves',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=255)),
                ('shop_description', models.CharField(max_length=255, null=True)),
                ('shop_logo', models.FileField(upload_to='shop')),
                ('shop_backdrop', models.FileField(upload_to='shop')),
                ('shop_address', models.CharField(max_length=255, null=True)),
                ('shop_location', django.contrib.gis.db.models.fields.MultiPointField(null=True, srid=4326)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.municipality')),
            ],
            options={
                'db_table': 'shops',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ShopShelve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shelve')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shop')),
            ],
            options={
                'db_table': 'shop_shelves',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ShelveProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_price', models.FloatField(default=0.0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
                ('shop_shelve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shopshelve')),
            ],
            options={
                'db_table': 'products_shelves',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='department',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.province'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('quarter', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.municipality')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'clients',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='appuser',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userrole'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
